WspÃ³Å‚bieÅ¼noÅ›Ä‡ (Concurrency) â†’ ogÃ³lny koncept pozwalajÄ…cy obsÅ‚ugiwaÄ‡ wiele zadaÅ„ "jednoczeÅ›nie" ale niekoniecznie w tym samym momencie.
- czekanie na swojÄ… kolej"

RÃ³wnolegÅ‚oÅ›Ä‡ (Parallelism) â†’ rÃ³wnoczesne (w tym samym czasie) przetwarzania rÃ³Å¼nych fragmentÃ³w kodu lub zadaÅ„, na wielu procesorach lub rdzeniach procesora w celu zwiÄ™kszenia wydajnoÅ›ci. 
- "robienie rzeczy jednoczeÅ›nie"

***

Techniki wspÃ³Å‚bieÅ¼noÅ›ci:
WielozadaniowoÅ›Ä‡ (Multitasking)
WÄ…tki (Threads)
WspÃ³Å‚dzielenie pamiÄ™ci
Kolejki
Zdarzenia (Event-driven programming)
Programowanie asynchroniczne
Programowanie reaktywne (Reactive programming)
Blokowanie i synchronizacja
Semafory
Mutexy
Monitorowanie

Techniki rÃ³wnolegÅ‚oÅ›ci:
PodziaÅ‚ danych (Data parallelism)
PodziaÅ‚ zadaÅ„ (Task parallelism)
Model MapReduce
RÃ³wnolegÅ‚oÅ›Ä‡ w obrÄ™bie procesÃ³w (Process-level parallelism)
WÄ…tki w rÃ³wnolegÅ‚oÅ›ci (Thread-level parallelism)
GPU computing (RÃ³wnolegÅ‚oÅ›Ä‡ na procesorach graficznych)
SIMD (Single Instruction, Multiple Data)
MIMD (Multiple Instruction, Multiple Data)
Architektura wielordzeniowa (Multicore architecture)
Przetwarzanie rÃ³wnolegÅ‚e z rozdzieleniem pamiÄ™ci

***

AsynchronicznoÅ›Ä‡ w programowaniu - wykorzystuje jeden wÄ…tek wykonawczy, ale umoÅ¼liwia nieblokujÄ…cÄ… obsÅ‚ugÄ™ wielu zadaÅ„. Kod nie jest zatrzymywany podczas oczekiwania na zakoÅ„czenie operacji, co pozwala na efektywne korzystanie z zasobÃ³w. AsynchronicznoÅ›Ä‡ to technika wspÃ³Å‚bieÅ¼noÅ›ci.

Programowanie rÃ³wnolegÅ‚e moÅ¼e byÄ‡ osiÄ…gane przy uÅ¼yciu wielowÄ…tkowoÅ›ci, ale nie zawsze jest to konieczne, zwÅ‚aszcza w przypadku systemÃ³w, ktÃ³re oferujÄ… innÄ… rÃ³wnolegÅ‚oÅ›Ä‡, takÄ… jak rozproszone systemy czy GPU (jednostki przetwarzajÄ…ce grafikÄ™). 

WielowÄ…tkowoÅ›Ä‡ w programowaniu - jednoczesne wykonanie wielu wÄ…tkÃ³w w obrÄ™bie jednego procesu. WÄ…tek to podstawowa jednostka wykonawcza, a wielowÄ…tkowoÅ›Ä‡ umoÅ¼liwia wspÃ³Å‚bieÅ¼ne wykonywanie rÃ³Å¼nych fragmentÃ³w kodu w ramach tego samego programu. KaÅ¼dy wÄ…tek moÅ¼e blokowaÄ‡ inne wÄ…tki (w przypadku tzw. wÄ…tkÃ³w blokujÄ…cych) w trakcie oczekiwania na zasoby lub zakoÅ„czenie operacji.

WielowÄ…tkowoÅ›Ä‡ moÅ¼e byÄ‡ zarÃ³wno technikÄ… wspÃ³Å‚bieÅ¼noÅ›ci (Concurrency), jak i rÃ³wnolegÅ‚oÅ›ci (Parallelism), w zaleÅ¼noÅ›ci od sposobu jej uÅ¼ycia.
ğŸ“Œ Kiedy wielowÄ…tkowoÅ›Ä‡ to wspÃ³Å‚bieÅ¼noÅ›Ä‡?
ğŸ”¹ Gdy mamy jeden rdzeÅ„ CPU, a system przeÅ‚Ä…cza siÄ™ miÄ™dzy wÄ…tkami (tzw. "time slicing").
ğŸ”¹ WÄ…tki dziaÅ‚ajÄ… naprzemiennie, ale nigdy dokÅ‚adnie w tym samym czasie.
ğŸ”¹ PrzykÅ‚ady:
JavaScript (w przeglÄ…darce), gdzie asynchronicznoÅ›Ä‡ jest realizowana na jednym wÄ…tku.
Python threading (przez Global Interpreter Lock â€“ GIL nie pozwala na jednoczesne dziaÅ‚anie wielu wÄ…tkÃ³w na rÃ³Å¼nych rdzeniach).